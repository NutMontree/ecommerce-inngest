// const LINE_TOKEN = "u6Es8v8XLytQurPCWjuanLSItUf6deRXP3jGKEhYwgTNV0dxOUJRoKnY2UTtAJY6LxUSK9lUtCaQGYCQHVbTh6DhNbg0OvYFxZvIBVKBwfdwuVMq/Cy7djgFN2ju7MVnJOHFQDvwWvacjBrbsRdOzAdB04t89/1O/w1cDnyilFU="; // ‡πÉ‡∏™‡πà token ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏ì

// const res = await fetch("https://api.line.me/v2/bot/message/push", {
//     method: "POST",
//     headers: {
//         "Content-Type": "application/json",
//         Authorization: `Bearer ${LINE_TOKEN}`,
//     },
//     body: new URLSearchParams({ message }),
// });
import { NextRequest, NextResponse } from "next/server";

export async function POST(req: NextRequest) {
    try {
        const body = await req.json();
        const { name, email, subject, message, user, address, items, total } = body;

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
        if (!name || !email || !message) {
            return NextResponse.json({ success: false, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô" }, { status: 400 });
        }


        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ LINE Token ‡πÅ‡∏•‡∏∞ TO
        const LINE_CHANNEL_ACCESS_TOKEN = process.env.LINE_CHANNEL_ACCESS_TOKEN;
        const TO = process.env.LINE_TO;

        if (!LINE_CHANNEL_ACCESS_TOKEN || !TO) {
            return NextResponse.json(
                { success: false, message: "LINE bot token ‡∏´‡∏£‡∏∑‡∏≠ TO ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤" },
                { status: 500 }
            );
        }

        // Fallback ‡∏Ñ‡πà‡∏≤ user ‡πÅ‡∏•‡∏∞ address
        const userName = user || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
        const orderAddress = address || {};
        const fullAddress = `${orderAddress.fullName || "-"}, ${orderAddress.area || "-"}, ${orderAddress.city || "-"}, ${orderAddress.state || "-"}`;

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° LINE
        const textMessage = `
üì¶ ‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤!
üë§ ‡∏ú‡∏π‡πâ‡∏™‡∏±‡πà‡∏á: ${userName}
üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${fullAddress}
üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ‡∏ø${total || 0}
üçÆ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:
${(items || []).map((i: { product: any; quantity: any; price?: any }) => `‚Ä¢ ${i.product} x${i.quantity}${i.price ? ` (‡∏ø${i.price})` : ""}`).join("\n")}
    `;

        console.log("LINE message:", textMessage);
        console.log("Sending to:", TO);

        // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ LINE
        const res = await fetch("https://api.line.me/v2/bot/message/push", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${LINE_CHANNEL_ACCESS_TOKEN}`,
            },
            body: JSON.stringify({
                to: TO,
                messages: [{ type: "text", text: textMessage }],
            }),
        });

        if (!res.ok) {
            const errText = await res.text();
            console.error("LINE API response:", res.status, errText);
            return NextResponse.json(
                { success: false, message: errText || "‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" },
                { status: 500 }
            );
        }

        return NextResponse.json({ success: true, message: "‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!" });
    } catch (error: any) {
        console.error("LINE API error:", error);
        return NextResponse.json(
            { success: false, message: error.message || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î" },
            { status: 500 }
        );
    }
}
